{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///app/apps/frontend/src/views/profile/Profile.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { fetchAuthMe } from '../../redux/slices/auth'\nimport { AppDispatch, RootState } from '../../redux/store'\nimport Link from 'next/link'\nimport './profile.css'\n\ninterface UserData {\n  avatarUrl?: string\n  fullName?: string\n  email?: string\n  orders?: Array<{\n    id: string\n    date: string\n    status: string\n    total: number\n  }>\n}\n\nconst Profile = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { data: userData, status } = useSelector((state: RootState) => state.auth)\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchAuthMe())\n    }\n  }, [dispatch, status])\n\n  const handleLogout = () => {\n    localStorage.removeItem('token')\n    window.location.href = '/login'\n  }\n\n  if (status === 'loading') {\n    return (\n      <div className=\"profile\">\n        <div className=\"container\">\n          <div className=\"loading\">Загрузка...</div>\n        </div>\n      </div>\n    )\n  }\n\n  if (status === 'error' || !userData) {\n    return (\n      <div className=\"profile\">\n        <div className=\"container\">\n          <p className=\"error-message\">Данные пользователя не найдены</p>\n          <Link href=\"/login\" className=\"auth-link\">\n            Войти в аккаунт\n          </Link>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"profile\">\n      <div className=\"container\">\n        <div className=\"profile-card\">\n          <div className=\"profile-header\">\n            <div className=\"profile-avatar-container\">\n              <img\n                src='/logo/NewLogo4.png'\n                alt=\"User Avatar\"\n                className=\"profile-avatar\"\n               \n              />\n            </div>\n            <div className=\"profile-details\">\n              <div className=\"profile-item\">\n              \n              </div>\n              <div className=\"profile-item\">\n                <label className=\"profile-label\"><b>Email:</b></label>\n                <p className=\"profile-email\">{userData.email || 'kirill.wep@gmail.com'}</p>\n              </div>\n            </div>\n            <div className=\"profile-actions\">\n              {/* <Link href=\"/profile/edit\" className=\"btn edit-btn\">\n                Редактировать профиль\n              </Link> */}\n              <button className=\"btn logout-btn\" onClick={handleLogout}>\n                Выйти из аккаунта\n              </button>\n            </div>\n          </div>\n\n          <div className=\"profile-orders\">\n            <h2 className=\"orders-title\">Ваши заказы</h2>\n            {userData.orders?.length ? (\n              <div className=\"orders-list\">\n                {userData.orders.map((order) => (\n                  <div className=\"order-item\" key={order.id}>\n                    <div className=\"order-details\">\n                      <span className=\"order-date\">{order.date}</span>\n                      <span className={`order-status ${order.status.toLowerCase()}`}>\n                        {order.status}\n                      </span>\n                      <span className=\"order-total\">Сумма: {order.total} ₽</span>\n                    </div>\n                    <Link href={`/orders/${order.id}`} className=\"order-link\">\n                      Подробнее\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"no-orders\">У вас нет заказов</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAEA;;;AALA;;;;;;AAoBA,MAAM,UAAU;;IACd,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,MAAM,QAAQ,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;+BAAE,CAAC,QAAqB,MAAM,IAAI;;IAE/E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,IAAI,WAAW,QAAQ;gBACrB,SAAS,CAAA,GAAA,iIAAA,CAAA,cAAW,AAAD;YACrB;QACF;4BAAG;QAAC;QAAU;KAAO;IAErB,MAAM,eAAe;QACnB,aAAa,UAAU,CAAC;QACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;IAEA,IAAI,WAAW,WAAW;QACxB,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BAAU;;;;;;;;;;;;;;;;IAIjC;IAEA,IAAI,WAAW,WAAW,CAAC,UAAU;QACnC,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAE,WAAU;kCAAgB;;;;;;kCAC7B,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAS,WAAU;kCAAY;;;;;;;;;;;;;;;;;IAMlD;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCACC,KAAI;oCACJ,KAAI;oCACJ,WAAU;;;;;;;;;;;0CAId,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;;;;;kDAGf,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAM,WAAU;0DAAgB,cAAA,6LAAC;8DAAE;;;;;;;;;;;0DACpC,6LAAC;gDAAE,WAAU;0DAAiB,SAAS,KAAK,IAAI;;;;;;;;;;;;;;;;;;0CAGpD,6LAAC;gCAAI,WAAU;0CAIb,cAAA,6LAAC;oCAAO,WAAU;oCAAiB,SAAS;8CAAc;;;;;;;;;;;;;;;;;kCAM9D,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAe;;;;;;4BAC5B,SAAS,MAAM,EAAE,uBAChB,6LAAC;gCAAI,WAAU;0CACZ,SAAS,MAAM,CAAC,GAAG,CAAC,CAAC,sBACpB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAK,WAAU;kEAAc,MAAM,IAAI;;;;;;kEACxC,6LAAC;wDAAK,WAAW,CAAC,aAAa,EAAE,MAAM,MAAM,CAAC,WAAW,IAAI;kEAC1D,MAAM,MAAM;;;;;;kEAEf,6LAAC;wDAAK,WAAU;;4DAAc;4DAAQ,MAAM,KAAK;4DAAC;;;;;;;;;;;;;0DAEpD,6LAAC,+JAAA,CAAA,UAAI;gDAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE;gDAAE,WAAU;0DAAa;;;;;;;uCAR3B,MAAM,EAAE;;;;;;;;;qDAe7C,6LAAC;gCAAE,WAAU;0CAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOvC;GAjGM;;QACa,4JAAA,CAAA,cAAW;QACO,4JAAA,CAAA,cAAW;;;KAF1C;uCAmGS","debugId":null}}]
}